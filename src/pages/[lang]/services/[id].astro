---
import Layout from '../../../layouts/Layout.astro';
import Header from '../../../components/layout/Header';
import Footer from '../../../components/layout/Footer';

import '../../../styles/global.css';
import { Box, ChevronRight } from "lucide-react";

// i18n Settings  //
import { getLangFromUrl } from '../../../i18n/utils/i18n';
import { servicesTexts as enServicesTexts } from '../../../i18n/en/services';
import { servicesTexts as esServicesTexts } from '../../../i18n/es/services';
import { Button } from '../../../components/ui/Button';

const url = new URL(Astro.request.url);
const lang = getLangFromUrl(url);

const servicesTextsByLang = {
  en: enServicesTexts,
  es: esServicesTexts,
};
const allServices = servicesTextsByLang[lang].services;

export const getStaticPaths = async () => {
  const langs = ['en', 'es'];
  // Define the services texts for each language
  const servicesTextsByLang: any = {
    en: enServicesTexts,
    es: esServicesTexts,
  };
  //
  return langs.flatMap(lang => {
    const services = servicesTextsByLang[lang].services;
    
    //
    return services.map((service: any) => ({
      params: { lang, id: service.id },
      props: { service },
    }));
  });
};

const { service } = Astro.props;

export const prerender = true;
---

<Layout>
  <head>
    <title>
      { lang === 'en' ? 'Service ' : 'Servicio ' }{service.title} - Imperio Pools
    </title>
  </head>
  <Header lang={lang} />

  <section class="w-full pt-20 mb-4 max-w-7xl mx-auto grid md:grid-cols-[240px_1fr] gap-8">
    <aside class="flex flex-col">
    <!-- breadcrumb -->
    <div class="breadcrumb">
      <a href={`/${lang}/services`} class="underline">
        Services
      </a>
      <ChevronRight className="mx-2 h-6" />
      <span>{service.title}</span>
    </div>
    <!-- ✅ Content Table -->
    <div class="w-full h-full px-4 rounded-2xl dark:bg-light/10 bg-dark/20 space-y-2 hidden md:block">
      <h3 class="global-subheading my-3 pt-2"> Content Table </h3>
      <ul class="space-y-1 pb-6">
        {allServices.map(cat => (
          <li>
            <a 
              href={`/${lang}/services/${cat.id}`} 
              class={`flex items-center rounded hover:bg-gray-100 ${
                cat.id === service.id ? 'font-bold text-blue-600' : 'global-text'
              }`}
            >
              <Box className="mr-2 h-4 flex-shrink-0"/>
              <span class="truncate flex-shrink min-w-0">
                {cat.title}
              </span>
            </a>
          </li>
        ))}
      </ul>
    </div>
    </aside>

    <!-- ✅ Item content -->
    <div class="flex flex-col space-y-4">
      <h2 class="global-section-text mb-8 text-center" transition:name={service.id}>
        { service.title }
      </h2>
      <!-- Content -->
      <div class="global-text">
        <p>{service.description}</p>
        <h2 class="global-heading mb-3"> Lorem </h2>
        <p set:html={service.content} />
      </div>
      <!-- CTA -->
      <div class="flex gap-8 md:mx-0 mx-4 items-center">
        <Button
          variant='mutted_sm'
          href={`/${lang}/gallery?f=${service.id}`}
          text={lang === 'en' ? 'Learn More' : 'Más Información'}
        />
        <Button
          variant='primary_sm'
          href={`/${lang}/get-quote/form?s=${service.id}`}
          text={lang === 'en' ? 'Get a Free Stimate Now →' : 'Obtener una Cotización Gratis →'}
        />
      </div>
    </div>

  </section>
  <Footer client:load lang={lang}/>
</Layout>