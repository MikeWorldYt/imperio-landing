---
import Layout from '../../layouts/Layout.astro';
import Header from '../../components/layout/Header.astro';
import Footer from '../../components/layout/Footer';

import '../../styles/global.css';
import { ChevronRight, Tag } from 'lucide-react';

// Gallery filter //
import GalleryGrid from '../../components/ui/galleryGrid';
import { getMediaByFilter } from "../../lib/media";

const url = new URL(Astro.request.url);
const filter = url.searchParams.get('f') ?? undefined;
const media = getMediaByFilter(filter);
const categories = ["default", "pool-remodeling", "replastering"];
const activeFilter = url.searchParams.get('f') ?? "default";
const catTest = "activeFilter";

// i18n Settings  //
import { useLang } from '../../hooks/useLang';
import { useLangPageTexts } from '../../hooks/useLangPageText';
import { useTranslations } from '../../hooks/useTranslations';
import { getStaticPaths } from '../../i18n/utils/i18n';
import { galleryTexts as enGalleryTexts } from '../../i18n/en/gallery';
import { galleryTexts as esGalleryTexts } from '../../i18n/es/gallery';
import type { LangTypes } from '../../i18n/utils/types';

export { getStaticPaths };

const galleryTextsByLang = {
    en: enGalleryTexts,
    es: esGalleryTexts,
};

// @ts-ignore
const texts = useLangPageTexts<LangTypes>(Astro, galleryTextsByLang);
// @ts-ignore
const lang = useLang(Astro);
const t = useTranslations(texts);
---

<Layout lang="{lang}">
  <head>
      <title>{` Projects of ${filter} - Imperio Pools`}</title>
  </head>
  <Header lang={lang} />
  <section class="w-full pt-20 pb-0 max-w-7xl mx-auto">
    <h2 class="global-section-text mb-8 text-center">
      {texts.title}
    </h2>
    <aside>
    <!-- breadcrumb -->
      <div class="breadcrumb">
        <span> Gallery </span>
        <ChevronRight className="mx-2 h-6" />
        <span> {filter} </span>
      </div>
      <!-- Tags -->
      <div class="flex justify-center mb-2 gap-2">
        {categories.map(cat => (
          <a 
            href={ `/${lang}/gallery?f=${cat}` } 
            class={`tag ${
              cat === filter 
              ? 'bg-blue-100 text-blue-600 font-semibold border-blue-400' 
              : 'border-gray-300 hover:bg-light dark:hover:bg-light/10 text-dark dark:text-light'
            }`}
          >
            <Tag className="mr-2 h-4"/>{cat.replace("-", " ")}
          </a>
        ))}
      </div>
  </aside>
  </section>

  <section class="w-full h-3/4 pt-0 mb-4 max-w-7xl mx-auto">
    <div>
      <GalleryGrid images={media} client:load/>
    </div>
  </section>
  <Footer client:load />
</Layout>

<style>
  .tag {
    @apply flex px-2 py-1 pr-4 items-center rounded-full border transition-all duration-300 ease-in-out;
  }
</style>